---
title: "Zoning and Highway Placement: Summary Stats"
author: "Michaela Philip"
execute:
  echo: false
jupyter: python3
---


```{python}
from data_code.merge_data import ed, ed_hwy57
```

```{python}
#summary stats by zone
outcomes = ['poppct', 'bpct', 'medsei', 'immpct']
agg_funcs = {col: 'mean' for col in outcomes if col != 'poppct'}
agg_funcs['poppct'] = 'sum'
ed_zone = ed.groupby('zone').agg(agg_funcs).reset_index()
print(ed_zone)
print(ed_zone.to_latex(float_format="%.2f", index = False))
```

```{python}
#summary stats by zone_min (Table 1)
outcomes = ['poppct', 'bpct', 'meansei', 'Constructed']
agg_funcs = {col: 'mean' for col in outcomes if col != 'poppct'}
agg_funcs['poppct'] = 'sum'
ed_zone = ed_hwy57.groupby('zone_min').agg(agg_funcs).reset_index()
ed_zone['count'] = ed_hwy57.groupby('zone_min').size().values

ed_zone = ed_zone.T

print(ed_zone)
print(ed_zone.to_latex(float_format="%.2f", index = True))
```

```{python}
#overall summary stats
ed_overall = ed_hwy57.agg(agg_funcs).reset_index().T
ed_overall['count'] = len(ed_hwy57)

ed_overall = ed_overall.T

print(ed_overall)
print(ed_overall.to_latex(float_format="%.2f", index = False))
```

```{python}
#summary stats by hwy presence
outcomes = ['poppct', 'bpct', 'medsei', 'pct_residential', 'pct_industrial', 'pct_sub_residential']
agg_funcs = {col: 'mean' for col in outcomes if col != 'poppct'}
agg_funcs['poppct'] = 'sum'
ed_hwy57_status = ed_hwy57.groupby('Status').agg(agg_funcs).reset_index()
print(ed_hwy57_status)
print(ed_hwy57_status.to_latex(float_format="%.2f", index = False))
```

```{python}
#summary stats by race
outcomes = ['medsei', 'poppct', 'pct_residential', 'pct_industrial', 'pct_sub_residential', 'Projected', 'Constructed']
agg_funcs = {col: 'mean' for col in outcomes if col != 'poppct'}
agg_funcs['poppct'] = 'sum'
ed_hwy57_majblack = ed_hwy57.groupby('maj_black').agg(agg_funcs).reset_index()
print(ed_hwy57_majblack)
```

```{python}
#summary stats by race and zoning
outcomes = ['poppct', 'Projected', 'Constructed']
agg_funcs = {col: 'mean' for col in outcomes if col != 'poppct'}
agg_funcs['poppct'] = 'sum'
ed_hwy57_majblack_zone = ed_hwy57.groupby(['zone_min', 'maj_black']).agg(agg_funcs).reset_index()
print(ed_hwy57_majblack_zone)
print(ed_hwy57_majblack_zone.to_latex(float_format = "%.2f", index = False))
```

```{python}
#make a 2x2
import pandas as pd
table = pd.pivot_table(ed_hwy57, values = ['Constructed','Projected'], index='zone_min', columns = 'maj_black', aggfunc='mean')
print(table)
print(table.to_latex(float_format = "%.2f", index = True))
```

```{python}
outcomes = ['Projected', 'Constructed']
agg_funcs = {col: 'mean' for col in outcomes if col != 'poppct'}
agg_funcs['poppct'] = 'sum'
tab2 = ed_hwy57.groupby(['maj_black']).agg(agg_funcs).reset_index()
print(tab2)
```

```{python}
from data_code.merge import atl_grid, atl_hwy
print(atl_hwy.groupby('maj_zoning')['hwy'].mean())
```

```{python}
import pandas as pd
import geopandas as gpd
import numpy as np
atl_zone = gpd.read_file('data/input/zoning_shapefiles/atlanta/zoning.shp')
ed_gis = gpd.read_file('data/input/AtlantaGA40/AtlantaGA_ed40.shp')
ed_gis = ed_gis.to_crs('EPSG:3857')
from data_code.merge_data import classify_ed_update
ed_zone_update = classify_ed_update(ed_gis, atl_zone)

# from data_code.merge import all_roads
interstates = gpd.read_file('data/input/shapefiles/1960/interstates1959_del.shp').to_crs('EPSG:3857')
state_paved_59 = gpd.read_file('data/input/shapefiles/1960/stateHighwayPaved1959_del.shp').to_crs('EPSG:3857')
us_paved_59 = gpd.read_file('data/input/shapefiles/1960/usHighwayPaved1959_del.shp').to_crs('EPSG:3857')
interstates = interstates[~interstates['FCLASS'].isin([9, 19])]
state_paved_59 = state_paved_59[~state_paved_59['FCLASS'].isin([9,19])]
us_paved_59 = us_paved_59[~us_paved_59['FCLASS'].isin([9,19])]

all_roads = pd.concat([interstates, state_paved_59, us_paved_59])

ed_zone_update_hwy = gpd.sjoin(ed_zone_update, all_roads, how = 'left', predicate = 'intersects')

# make a dummy variable indicating the presence of a highway
ed_zone_update_hwy['hwy'] = np.where(ed_zone_update_hwy['type'].isna(), 0, 1)

ed_zone_update_hwy['maj_black'] = np.where(ed_zone_update_hwy['bpct'] > ed_zone_update_hwy['bpct'].mean(), 1, 0)

table = pd.pivot_table(ed_zone_update_hwy, values = ['hwy'], index='zone', columns = 'maj_black', aggfunc='mean')
print(table)

table2 = ed_zone_update_hwy.groupby(['zone', 'maj_black'])['hwy'].mean()
print(table2)
```